-------{1} LACE DEBUGGER {0}-------
Available Commands:

    {35;1}help{0;35;2}({0;35}h{2}){0}
        Show this message.

    {35;1}progress{0;35;2}({0;35}p{2}){0} {32;3}COUNT{2}?{0}
        Execute next instruction or jump into subroutine.
          {2}-{0} {3}COUNT{0}: {36}Integer{0} {3}(default: 1){0}

    {35;1}next{0;35;2}({0;35}n{2}){0} {32;3}COUNT{2}?{0}
        Execute next instruction or whole subroutine (including any nested
            subroutine calls).
          {2}-{0} {3}COUNT{0}: {36}Integer{0} {3}(default: 1){0}

    {35;1}continue{0;35;2}({0;35}c{2}){0}
        Continue execution until breakpoint or {1}HALT{0}.

    {35;1}finish{0;35;2}({0;35}f{2}){0}
        Continue execution until end of subroutine, breakpoint, or {1}HALT{0}.

    {35;1}get{0;35;2}({0;35}g{2}){0} {32;3}LOCATION{2}?{0}
        Print the value at a register, address, or label.
          {2}-{0} {3}LOCATION{0}: {36}Register{0} {2}|{0} {36}Address{2}+{0}

    {35;1}set{0;35;2}({0;35}s{2}){0} {32;3}LOCATION VALUE{0}
        Set the value at a register, address, or label.
          {2}-{0} {3}LOCATION{0}: {36}Register{0} {2}|{0} {36}Address{2}+{0}
          {2}-{0} {3}VALUE{0}: Integer

    {35;1}registers{0;35;2}({0;35}r{2}){0}
        Print the value of all registers.

    {35;1}jump{0;35;2}({0;35}j{2}){0} {32;3}LOCATION{0}
        Unconditionally jump to an address/label.
          {2}-{0} {3}LOCATION{0}: {36}Address{2}+{0} {2}|{0}

    {35;1}break add{0;35;2}({0;35}ba{2}){0} {32;3}LOCATION{2}?{0}
        Add breakpoint at an address/label/PC.
          {2}-{0} {3}LOCATION{0}: {36}Address{2}+{0} {2}|{0} {3}(default: PC){0}

    {35;1}break remove{0;35;2}({0;35}ba{2}){0} {32;3}LOCATION{2}?{0}
        Remove breakpoint at an address/label/PC.
          {2}-{0} {3}LOCATION{0}: {36}Address{2}+{0} {2}|{0} {3}(default: PC){0}

    {35;1}break list{0;35;2}({0;35}ba{2}){0}
        List all breakpoints.

    {35;1}assembly{0;35;2}({0;35}a{2}){0}
        Print corresponding line of assembly source code from address/label/PC.
          {2}-{0} {3}LOCATION{0}: {36}Address{2}+{0} {2}|{0} {3}(default: PC){0}

    {35;1}eval{0;35;2}({0;35}e{2}){0}
        Simulate an instruction. Note that labels cannot be created or modified.
          {2}-{0} Instruction: {36}OPCODE OPERANDS{2}...{0}

    {35;1}reset{0}
        Reset all memory and registers to original state.

    {35;1}quit{0;35;2}({0;35}q{2}){0}
        Stop debugger and continue execution as normal.

    {35;1}exit{0}
        Exit debugger and simulator.

{3}Note:{0} A {36}Address{2}+{0} argument can be one of the following:
    {1}1.{0} An absolute address value.           {36}x3010{0}
    {1}2.{0} A label with an optional offset.     {36}Foo{0;2}, {0;36}Hello+4{0}
    {1}3.{0} An offset from the program counter.  {36}^3{0;2}, {0;36}^-x10{0}
