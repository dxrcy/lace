-------[1m LACE DEBUGGER [0m-------
Available Commands:

    [1mhelp[0m
        Show this message.

    [1mstep[0m (t) [3mCOUNT?[0m
        Execute next instruction or jump into subroutine.
          - [3mCOUNT[0m: Integer (default: 1)

    [1mnext[0m (n) [3mCOUNT?[0m
        Execute next instruction or whole subroutine.
          - [3mCOUNT[0m: Integer (default: 1)

    [1mcontinue[0m (c)
        Continue execution until breakpoint or `HALT`.

    [1mfinish[0m (f)
        Continue execution until end of subroutine, breakpoint, or `HALT`.

    [1mget[0m (g) [3mLOCATION[0m
        Print the value at a register, address, or label.
          - [3mLOCATION[0m: Register | Address+ | Label+

    [1mset[0m (s) [3mLOCATION VALUE[0m
        Set the value at a register, address, or label.
          - [3mLOCATION[0m: Register | Address+ | Label+
          - [3mVALUE[0m: Integer

    [1mregisters[0m (r)
        Print the value of all registers.

    [1mbreak add[0m (ba) [3mLOCATION?[0m
        Add breakpoint at an address/label/PC.
          - [3mLOCATION[0m: Address+ | Label+ (default: PC)

    [1mbreak remove[0m (br) [3mLOCATION?[0m
        Remove breakpoint at an address/label/PC.
          - [3mLOCATION[0m: Address+ | Label+ (default: PC)

    [1mbreak list[0m (bl)
        List all breakpoints.

    [1mreset[0m
        Reset all memory and registers to original state.

    [1msource[0m [3mCOUNT? LOCATION?[0m
        Print corresponding line and line number of source code from address/label/PC.
          - [3mCOUNT[0m: Integer (default: 1)
          - [3mLOCATION[0m: Address+ | Label+ (default: PC)

    [1meval[0m
        Simulate an instruction. Note that labels cannot be created or modified.
          - Instruction: OPCODE OPERANDS...

    [1mquit[0m (q)
        Stop debugger and continue execution as normal.

    [1mexit[0m (e)
        Exit debugger and simulator.

[1mNote:[0m Address+ and Label+ arguments can include an offset, eg. `HelloWorld+4`
